<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Middle Path Development - Blog</title>
    <description>Middle Path Development Site </description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 10 Dec 2018 13:28:00 -0800</pubDate>
    <lastBuildDate>Mon, 10 Dec 2018 13:28:00 -0800</lastBuildDate>
    <generator>Jekyll v3.7.4</generator>
    
      <item>
        <title>Solving Schema Bloat with Postgresql's JSONB</title>
        <description>&lt;div class=&quot;home-link-container&quot;&gt;
  &lt;a class=&quot;blog-home-link&quot; href=&quot;/blog&quot;&gt;Blog Home&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;I often find myself inheriting projects with database schema’s that suffer from &lt;em&gt;schema bloat&lt;/em&gt;.  What is “schema bloat”, one might ask ?  Great question, since I just invented the term.  Here is my definition:&lt;/p&gt;

&lt;p&gt;Schema Bloat:  The act of adding more and more non-essential columns to a database table in order solve problems for a limited group of your application’s users.&lt;/p&gt;

&lt;p&gt;“Table Bloat” would probably make more sense, however, the term “table bloat” has a specific &lt;a href=&quot;https://dba.stackexchange.com/questions/126258/what-is-table-bloating-in-databases&quot; target=&quot;_blank&quot;&gt;meaning&lt;/a&gt;.  So we will stick with “schema bloat” for the remainder of this article.&lt;/p&gt;

&lt;h2 id=&quot;schema-bloat&quot;&gt;Schema Bloat&lt;/h2&gt;
&lt;p&gt;Typically there is a central table for an application - often &lt;em&gt;users&lt;/em&gt; or &lt;em&gt;companies&lt;/em&gt; or something similar.  The schema bloat problem typically happens when the following occurs:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Company A needs to track some data that only effects Company A.  To solve this, columns are added to various tables.&lt;/li&gt;
  &lt;li&gt;Rinse and repeat for companies B, C, D ….&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It’s reasonable to ask, especially if inheriting an existing database, why bother refactoring this column-bloated schema ?  What do we gain ?&lt;/p&gt;

&lt;p&gt;The initial costs of doing this refactoring (which adds zero new features) are significant.  We will cover the specifics later, but for now, let’s go with the assumption that this is not going to be a simple task.  Despite the scariness (and difficulty of selling this kind of refactoring), the gains are	 significant.&lt;/p&gt;

&lt;h4 id=&quot;by-getting-rid-of-these-non-essential-columns-we-gain&quot;&gt;By getting rid of these non-essential columns, we gain:&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;A clearer picture of the data-model&lt;/em&gt;.  There is much room for error and confusion when working on abstract concepts like a DB schema.  Anything we can do to simplify and clarify how our data is organized will help programmers working on the app.  If we can see that one group of values only applies to Company A and another group to Company B, &lt;strong&gt;at the DB level&lt;/strong&gt;, it makes our data much easier to understand.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Working with the data can be easier&lt;/em&gt;.  I’ve inherited tables with 150+ columns.  Most of them non-essential.  How many hours do programs spend squinting at their screens trying to find the proper column name ?  The vast majority of the columns they need to scroll by might not even apply to the company/user that is needing attention.  And one can imagine how this problem can become exponentially more difficult if columns have obscure and similar sounding names:  &lt;code class=&quot;highlighter-rouge&quot;&gt;xprt_vs_cd_tps&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;xprt_vs_cd_rts&lt;/code&gt; .  Like finding a needle in a haystack!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://foolishlego.com/wp-content/uploads/2014/10/lego_2_277.jpg&quot; alt=&quot;Pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is a real cost to consider.   In addition, not addressing this kind of problem makes day to day life much more unpleasant for your programmers.  Worker happiness is important !&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://uproxx.files.wordpress.com/2014/09/george-costanza.jpg?quality=100&amp;amp;w=650&amp;amp;h=400&quot; alt=&quot;Pic&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;what-is-jsonb-&quot;&gt;What is JSONB ?&lt;/h2&gt;
&lt;p&gt;JSONB is a column type (data type) that is part of the wonderful Postgresql, open-source database.  Essentially we can store nested JSON (Javascript Object Notation) objects in this column.  &lt;em&gt;We are going to assume the reader is familiar with JSON.  If not, the internet is your friend&lt;/em&gt;.  This column type gives Postgres the sort of key/value store that is associated with NoSQL databases.  JSONB also provides tools for indexing and querying these JSON objects which we shall cover presently.&lt;/p&gt;

&lt;h4 id=&quot;jsonb-basics&quot;&gt;JSONB Basics&lt;/h4&gt;

&lt;p&gt;Let’s briefly go over some of the basics ways to work with JSONB.  Adding a JSONB column is quite easy:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;companies&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;optional_data&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonb&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We also want to (usually) index these JSONB columns.  And we want to use a GIN index.  The reasons for this index are beyond the scope of this talk, as is the discussion about when and why to use indexes.  For the vast majority of situations, the GIN index will work nicely.  This index can also be placed on an individual attribute in the JSONB column.  Here we will apply it to the entire column.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE INDEX optional_data_idx ON companies USING GIN (optional_data);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Once we have a JSONB column we can insert JSON objects into that column.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;companies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optional_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{&quot;opt_att&quot;: &quot;Some Val 1&quot;, &quot;another_opt_att&quot;: &quot;Another Val 1&quot;}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;companies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optional_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{&quot;opt_att&quot;: &quot;Some Val 2&quot;, &quot;another_opt_att&quot;: &quot;Another Val 2&quot;, &quot;nested_obj&quot;: {&quot;nested_att&quot;: &quot;some nested value&quot;}}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The syntax for querying values from a JSONB column is fairly straightforward.  There are lots of JSONB functions and operators that we are not going to cover.  You can &lt;a href=&quot;https://www.postgresql.org/docs/9.5/static/functions-json.html&quot; target=&quot;_blank&quot;&gt;read about them here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Use the &lt;code class=&quot;highlighter-rouge&quot;&gt;-&amp;gt;&amp;gt;&lt;/code&gt; operator to select a value at the attribute level.   The following query:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT optional_data-&amp;gt;&amp;gt;’opt_att’ FROM companies LIMIT 1;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Should return &lt;code class=&quot;highlighter-rouge&quot;&gt;Some Val 1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You can select nested values using a combination of the &lt;code class=&quot;highlighter-rouge&quot;&gt;-&amp;gt;&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;-&amp;gt;&amp;gt;&lt;/code&gt; operators.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT optional_data-&amp;gt;’nested_obj’-&amp;gt;&amp;gt;’nested_att’ FROM companies;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Should return &lt;code class=&quot;highlighter-rouge&quot;&gt;some nested value&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;jsonb-solution-for-schema-bloat---the-big-idea&quot;&gt;JSONB solution for Schema Bloat - The Big Idea&lt;/h4&gt;

&lt;p&gt;Our big idea is actually quite simple.  We are going to move any column that is “optional” (not used by every company) into a JSONB column, thus slimming down our bloated table(s) significantly.  It’s a fairly simple idea at the DB level.&lt;/p&gt;

&lt;p&gt;Once we get into the Ruby (or insert other language here) level things can become more complex.  We need to make sure our getters and setters are doing the correct thing. The thought of refactoring a lot of views in the application can be daunting enough to scare off would-be-refactorers.  Luckily for us (in the Ruby world and beyond), we have some tools that can help us handle this Ruby refactoring at a low level, and save us from having to change the view layer at all (in most cases).&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;ruby-and-the-storext-gem&quot;&gt;Ruby and the Storext Gem&lt;/h2&gt;
&lt;p&gt;Welcome to the Ruby part of this article!  The &lt;a href=&quot;https://github.com/G5/storext&quot; target=&quot;_blank&quot;&gt;Storext&lt;/a&gt; gem makes it easy for ActiveRecord to work with JSONB.  The Storext gem also wraps the Virtus gem, so let’s talk about that briefly.&lt;/p&gt;

&lt;h4 id=&quot;virtus-gem&quot;&gt;Virtus Gem&lt;/h4&gt;

&lt;p&gt;The Virtus gem assists in creating virtual attributes for a Ruby object.  In our case, it is an object that inherits from ActiveRecord::Base - a model.  When can think of &lt;a href=&quot;https://github.com/solnic/virtus&quot; target=&quot;_blank&quot;&gt;Virtus&lt;/a&gt; as a pumped up version of  &lt;code class=&quot;highlighter-rouge&quot;&gt;attr_accessor&lt;/code&gt;.  The important part of Virtus is that it can enforce type restrictions, which helps a virtual attribute behave more like a column.  Ideally, we want Rails to see no difference between fetching data from a “normal” column, versus our JSONB, optional_values attribute.&lt;/p&gt;

&lt;h4 id=&quot;using-storext-with-rails&quot;&gt;Using Storext with Rails&lt;/h4&gt;

&lt;p&gt;Let’s jump into the nuts and bolts of how we accomplish this JSONB refactoring.  We’ll be working with the &lt;code class=&quot;highlighter-rouge&quot;&gt;Foobar&lt;/code&gt; object - which is backed by a table with WAY too many optional columns (let’s use our imaginations).&lt;/p&gt;

&lt;p&gt;We can store a hard-coded (or if you want to get really flexible, store this data in the DB instead) file in our &lt;code class=&quot;highlighter-rouge&quot;&gt;app/models/concerns&lt;/code&gt; directory that has information about all of our custom attributes, for a given company.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Company1CustomAtts&lt;/span&gt; 
  &lt;span class=&quot;no&quot;&gt;COMPANY1_CUSTOM_ATTS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;att_1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Boolean&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;att_2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;DateTime&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;att_3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;String&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We’ve stored info about our custom attributes in a hash.  Now we just need to tell our model about these custom attributes.  Here is where Storext and Virtus make our lives much easier!&lt;/p&gt;

&lt;p&gt;In Rails 4.2 and beyond, creating a JSONB column on a table is easy (if you are using an earlier version of Rails, some Ruby gems might help you or trying just writing the migration in raw SQL).&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;create_table&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:foobars&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;integer&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:company_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsonb&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:optional_attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;default: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{}'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;add_index&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:foobars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:optional_attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;using: :gin&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And our model code will look something like this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Foobar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Company1CustomAtts&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Company2CustomAtts&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Storext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;model&lt;/span&gt;
  &lt;span class=&quot;vc&quot;&gt;@@all_custom_atts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;COMPANY1_CUSTOM_ATTS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;COMPANY2_CUSTOM_ATTS&lt;/span&gt;
  &lt;span class=&quot;vc&quot;&gt;@@all_custom_atts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;store_attribute&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:optional_attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_sym&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;default: &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We need to include our collection of custom attributes.  We also need to include the &lt;code class=&quot;highlighter-rouge&quot;&gt;Storext.model&lt;/code&gt; module to get the Storext functionality for our Foobar model.  Once that is done, we can cycle through our collection of attributes and pass them to the &lt;code class=&quot;highlighter-rouge&quot;&gt;store_attribute&lt;/code&gt; method.   We pass some other metadata along about the attributes (type and default values).  The &lt;code class=&quot;highlighter-rouge&quot;&gt;store_attribute&lt;/code&gt; method, sets up setters and getters for each JSONB attribute we have in our collection.  After we execute this code, we can do things like this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;foobar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Foobar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;foobar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;att_1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;foobar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;new_var&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Foobar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;new_var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;att_1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# returns 42&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and Rails will fetch the value from the JSONB attribute, just as if it was a regular database column.&lt;/p&gt;

&lt;p&gt;The amazing win here (DO NOT forget to read the “Gotchas” section below) is that once we have this set up, Rails is not even aware that the values are coming from JSONB.  Our getters and setters are magically working!  And things like &lt;code class=&quot;highlighter-rouge&quot;&gt;form_for&lt;/code&gt;  &lt;em&gt;just work&lt;/em&gt; (so far to my knowledge - I’m sure there are edge-cases).&lt;/p&gt;

&lt;p&gt;Once we realized that we did not have to refactor our views, forms etc… this refactoring became a lot more attractive.  It seems we can solve this at the Ruby level with only a few lines of code!&lt;/p&gt;

&lt;h4 id=&quot;gotchas---jsonb-and-rails&quot;&gt;Gotchas - JSONB and Rails&lt;/h4&gt;

&lt;p&gt;There are definitely some columns that even if optional, may not be good candidates for our JSONB refactoring.   Let’s examine a few cases.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Foreign Keys&lt;/em&gt;.  ActiveRecord expects foreign keys to be legitimate database columns.  I’m sure one could get this to work using some of the macros provided by ActiveRecord or even diving down to a low level in ActiveRecord.  I would not recommend it.  I think schema bloat is usually not caused by excessive foreign keys.  If that is a problem with a database table, I suspect there are deeper schema problems to address.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Low level database queries&lt;/em&gt;.  Although we are working with Rails, there often comes a time when we need to drop down to the SQL level and write our query.  Maybe we need to run a Postgresql function.  Maybe we just need to access an attribute outside of ActiveRecord.  Obviously, if you’ve written raw SQL, you will need to refactor it to use the JSONB syntax.  This is not so much a “gotcha” as a friendly reminder.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Data migration (over to JSONB) can be tricky&lt;/em&gt;.  If we are inheriting a bloated schema, we will need to migrate that data over to it’s new JSONB home.  Once we write the Storext code, the model will start using those getters/setters because they are defined last in the model.  When a Rails model inherits from ActiveRecord it automagically inherits setters and getters for each database column.  That is defined in line 1 of our model (&lt;code class=&quot;highlighter-rouge&quot;&gt;class Foobar &amp;lt; ActiveRecord::Base&lt;/code&gt;).  Since the Storext code runs after line 1, those getters and setters over-write the ActiveRecord getters and setters.  One way to help get around the trickiness this code introduces is by remembering the following:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;foobar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Foobar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;foobar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;att_1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# uses the ruby getter for &quot;att_1&quot; (in our case the JSONB attribute) to fetch the value&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;foobar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'att_1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# uses the foobars.att_1 database column to fetch the value&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;For more complex data migrations, doing things at a lower level in ActiveRecord or at the SQL level might be required.  Once the migration is complete, it is possible to delete or hide (rename) the legacy columns.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Optional columns that require lots of aggregate data calculations&lt;/em&gt;.  It is possible that one may face performance issues if there needs to be lots of aggregate functions / calculations run on the JSONB attributes.  This is definitely beyond the scope of this article, but I think it’s safe to say that this issue probably only effects those that have large data sets.  Large enough that we need to start thinking about scale.   This last gotcha probably does not apply to most web applications.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;solving-schema-bloat-outside-of-jsonb&quot;&gt;Solving Schema Bloat Outside of JSONB&lt;/h2&gt;
&lt;p&gt;Even without JSONB, we can handle non-essential, optional attributes without adding a bunch of columns to a bloated table.  It requires more moving parts and can perform worse (lots of JOINS needed), but let’s take a look at that schema pattern.&lt;/p&gt;

&lt;p&gt;We can set up on table to store our attribute names and a second table to store the related values, scoped to each Foobar object.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;optional_attributes
-----------------+------------------------+
 id              | integer                |
 company_id      | integer                |
 attribute_name  | character varying(255) |
-----------------+------------------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;foobar_optional_attributes
--------------------------+------------------------+
 id                       | integer                |
 foobar_id                | integer                |
 optional_attribute_id    | integer                |
 optional_attribute_value | character varying(255) |
--------------------------+------------------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We choose the simple example because it illustrates our point clearly.  We can add as many rows as needed to cover the optional attributes.  We no longer need these optional attributes as database columns.  Therefore, schema bloat can be solved without JSONB, however, JSONB makes it much easier.  The example above is only meant to illustrate a schema pattern/idea.  I’m not suggesting it as a viable solution for most applications.&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;p&gt;Discovering how to easily use Postgresql’s JSONB to manage optional data can really help slim down some bloated tables.  So if you have a bloated schema,  and you are in the Postgresql world, consider JSONB to solve schema bloat!&lt;/p&gt;

&lt;div class=&quot;home-link-container&quot;&gt;
  &lt;a class=&quot;blog-home-link&quot; href=&quot;/blog&quot;&gt;Blog Home&lt;/a&gt;
&lt;/div&gt;

</description>
        <pubDate>Sat, 06 Jan 2018 00:00:00 -0800</pubDate>
        <link>http://localhost:4000/blog/solving-schema-bloat-with-jsonb.html</link>
        <guid isPermaLink="true">http://localhost:4000/blog/solving-schema-bloat-with-jsonb.html</guid>
        
        <category>consulting</category>
        
        <category>web-development</category>
        
        <category>postgresql</category>
        
        <category>ruby</category>
        
        
      </item>
    
      <item>
        <title>Consult Early!</title>
        <description>&lt;div class=&quot;home-link-container&quot;&gt;
  &lt;a class=&quot;blog-home-link&quot; href=&quot;/blog&quot;&gt;Blog Home&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;When I’m hired onto an existing project, I’m often surprised to find that costly decisions were made early on in the process without insight from someone with sufficient technical knowledge to avoid costly mistakes.  Everyone must live with these high level decisions (unless there is enough funding to absorb the cost of back-tracking).  I’m surprised by how many times I see this &lt;strong&gt;major mis-step&lt;/strong&gt;.  How do we avoid it ?  Consult early!&lt;/p&gt;

&lt;h2 id=&quot;technical-partner&quot;&gt;Technical Partner&lt;/h2&gt;
&lt;p&gt;Most often, the entrepreneurs driving a new project are not programmers, and thus are searching for that elusive “technical partner”, to help guide them through the murky, technical maze of web development.  This is a fantastic idea.  In fact, this article is aimed at making that easier.  Here are a few misconceptions that entrepreneurs have about what they &lt;strong&gt;need&lt;/strong&gt; from a technical partner:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The technical partner needs to be invested in the project on a personal level.  Entrepreneurs want someone who is equally excited by the project.&lt;/li&gt;
  &lt;li&gt;They might want someone to be financially invested.  Perhaps working for some sort of equity along with pay.  Obviously, this is a direct, very measurable sign of commitment to a project.&lt;/li&gt;
  &lt;li&gt;Personal connections are sometimes given preference.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There might be other requirements specific to the project.  &lt;em&gt;We need someone who is expert with Technology X&lt;/em&gt;.   Once you start piling up this laundry list of requirements, we start to understand how people can get impatient and plow headfirst into projects without any expert, technical guidance.  Alternatively, some become mired in “analysis paralysis”.   Waiting for the arrival of the technical partner before making big decisions.&lt;/p&gt;

&lt;p&gt;When dealing with tech, trying to understand what is happening can feel like “black magic”, so having &lt;strong&gt;trust&lt;/strong&gt; in your advisor is key.  Having a personal friend or someone invested in the project act as the technical partner is an understandable impulse.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;technical-consultant&quot;&gt;Technical Consultant&lt;/h2&gt;
&lt;p&gt;To side-step the problems of finding the technical partner and still get that early, technical guidance, I am going to suggest working with a consultant.  This may feel scary.  And to make matters worse, this article is not going to solve the question of “how do I find someone I can trust ?”  Earning trust is something that takes time.  And in terms of &lt;strong&gt;finding&lt;/strong&gt; someone, I don’t have anything beyond the obvious suggestions:  Ask your technical friends.  Friends of friends.  Network.  Etc…. I don’t have much to add to that conversation.  However, we can (and will) discuss how to offset the risk of working with someone who (let’s face it), does not have 100% of your trust…. yet.&lt;/p&gt;

&lt;p&gt;Let’s address the number one concern:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I need someone who is invested in the project (emotionally and maybe even financially) to get good advice&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Technical advice can be given without knowing too many details about the business domain.  I’ve worked on dozens of websites and they all have had common technical structures, even though the content of each site has been vastly different.  If this is  a hard pill to swallow (&lt;em&gt;But OUR site is completely unique!&lt;/em&gt;), I suggest you ask some of your programmer friends about it.  I’m only talking about the technical structure here, not the content of the site.&lt;/p&gt;

&lt;p&gt;Let’s talk about some big advantages to working with consultants as a sort of temporary, technical partner.&lt;/p&gt;

&lt;p&gt;Consultants have wider perspective and are skilled at being resource efficient.  More often than not, consultants must work as the  programmer who is writing code, etc…. and also fill other roles that might not be for a smaller company.  It’s no secret.  Larger, more “corporate” companies, can end up being a bit wasteful in their spending.  Startups and smaller companies are not afforded this luxury.  Consultants, who work with these smaller companies, understand this fact.&lt;/p&gt;

&lt;p&gt;Consultants have experience working on Minimal Viable Products (MVP) projects.  We won’t go into depth here about what MVP means here.  Chances are, if you are looking for a technical partner, you are in the very early stages of your project.  Normally getting an MVP &lt;em&gt;should&lt;/em&gt; be the first milestone.&lt;/p&gt;

&lt;p&gt;Another unexpected benefit to working with consultants is that they are exposed to more people in the web development business than a traditional, “compartmentalized programmer.”  It’s not surprising that consultants are likely to work on more projects than the traditional programmer, and therefore meet more people.  If you develop trust with your consultant, they can be very useful in helping you find long-term or additional developers once your business takes off!&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;mitigating-the-risks&quot;&gt;Mitigating the Risks&lt;/h2&gt;

&lt;p&gt;As mentioned previously, there is no magic trick to finding someone.  Once you have some candidates, the following suggestions won’t prevent you from making mistakes, but hopefully they will prevent mistakes from growing into full-fledged catastrophes.&lt;/p&gt;

&lt;h4 id=&quot;work-incrementally&quot;&gt;Work Incrementally&lt;/h4&gt;

&lt;p&gt;This is the same advice I have for working directly with someone who is writing code for you.  Even if the consultant is only offering advice, start with something really small.  You’d be surprised how often solving a small, &lt;em&gt;easy&lt;/em&gt; task can be accomplished in a number of ways.  Each decision has future implications.  So start small!  Paying a consultant for a few hours is certain less risk than sending a consultant off to plan out a complex task.  You might find you don’t like working with this person.  Or perhaps they are flashing some red flags…&lt;/p&gt;

&lt;h4 id=&quot;look-for-advice-not-answers&quot;&gt;Look for advice, not answers&lt;/h4&gt;

&lt;p&gt;Consultants should give people options.   There is never a perfect answer.  Each decision has pros and cons.  A good consultant should understand this truth.  I would be wary of someone telling me:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;there is only one way to solve this potential task&lt;/li&gt;
  &lt;li&gt;only “Technology X” can accomplish this task&lt;/li&gt;
  &lt;li&gt;X is better than Y because X is &lt;em&gt;just better&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;get-a-second-opinion&quot;&gt;Get a Second Opinion&lt;/h4&gt;

&lt;p&gt;Or third or fourth if you have some serious qualms about your technical decisions / options.  This might sound like an unnecessary cost, but again, mis-steps early in the planning can be exponentially more expensive later on.&lt;/p&gt;

&lt;p&gt;Congrats for making it to the end of the article.  If you are at that critical stage of your project, why not invest in the long term chances of success ?  Consult early!&lt;/p&gt;
</description>
        <pubDate>Mon, 20 Nov 2017 00:00:00 -0800</pubDate>
        <link>http://localhost:4000/blog/consult-early.html</link>
        <guid isPermaLink="true">http://localhost:4000/blog/consult-early.html</guid>
        
        <category>consulting</category>
        
        <category>project-management</category>
        
        
      </item>
    
      <item>
        <title>Finding Effective Consultants</title>
        <description>&lt;div class=&quot;home-link-container&quot;&gt;
  &lt;a class=&quot;blog-home-link&quot; href=&quot;/blog&quot;&gt;Blog Home&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Finding consultants can be a real challenge in today’s market.  This article is aimed at non-technical business owners or whoever might be in charge of hiring technical talent.  When I say “consultant”, I am primarily talking about &lt;em&gt;programmers&lt;/em&gt;, but as we will see, it takes more than being a technically skilled programmer to be an effective consultant.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;holes-in-my-houses-foundation&quot;&gt;Holes In My House’s Foundation&lt;/h3&gt;

&lt;p&gt;Sorry to bring out the tired house metaphor, but I still believe it is very appropriate for this kind of discussion.  Every consultant I’ve met has their horror stories about inheriting an application with some serious technical problems.  A side note to consultants here:  Yes we have all been there, but “hindsight is 20/20” (or insert other cliche here).  We do not know what was happening at the time, so try to reserve judgement about the previous programmers.  But by all means, please be critical of the code!&lt;/p&gt;

&lt;p&gt;Here is an example (one I’ve encountered a few times).  The previous programmer(s) built a database that has problems in the way the data is organized.  Then they wrote application code that runs on that database and its “less than desirable” organizational scheme.  This is a really terrible situation because it costs exponentially more the longer it goes unaddressed. In this example not only do we need to fix lots of code, but customer data needs to be migrated (to the better organized database scheme). Customer data migration is a tedious and scary process.&lt;/p&gt;

&lt;p&gt;Hopefully you do not find yourself in this situation.  If you have a trusted friend with some techincal experience, you may be able to lean on them to help you find a technically competent consultant.  I also believe this scenario is less common that other challenging situations (hint: read on) you might find working with consultants.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;rockstars-gurus-and-things-that-go-bump-in-the-night&quot;&gt;Rockstars, Gurus, and things that go bump in the night&lt;/h3&gt;

&lt;p&gt;So you have found your technical wizard and everything will be smooth sailing from here on, right ?  If you’ve been following along you probably know I am going burst your bubble.&lt;/p&gt;

&lt;p&gt;First let’s take a minute to address some buzz words you should probably avoid when searching for consultants.  &lt;em&gt;Rockstar&lt;/em&gt;, &lt;em&gt;guru&lt;/em&gt;, &lt;em&gt;wizard&lt;/em&gt; are a few that come to mind.  Looking at technical forums or email lists that allow recruitment posts, you will find that in the past few years these buzz words will ruffle many programmers’ feathers and before you know it, the pitchforks and torches have come out.  So why is that ?&lt;/p&gt;

&lt;p&gt;In software development, it “takes a village”.  The tired cliche of a nerd, locked in room with red bull and year’s supply of gummy bears has been played out and only belongs in TV or movies.  Collaboration is king and no one knows everything.  You might be thinking: &lt;em&gt;I cannot afford to hire a team of programmers.  I need one person who can do the job&lt;/em&gt;.  I am not being literal with the term “village”, so let’s talk about the single consultant scenario.&lt;/p&gt;

&lt;p&gt;Having your one “rockstar” consultant might work if the following are true:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You know exactly what features you need for your web application ahead of time&lt;/li&gt;
  &lt;li&gt;You are aware of the trade offs that different technologies or solutions present&lt;/li&gt;
  &lt;li&gt;You know that none of your requirements will ever change over the course of the project&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If this is the case, go ahead and buy the red bull and gummy bears, lock your consultant in a room and get ready for profit!&lt;/p&gt;

&lt;p&gt;Ok… I’ve &lt;strong&gt;never&lt;/strong&gt; worked on a project like that.  Requirements always change.  Most business owners are not aware of every technical trade off and rarely know how much work goes into each piece of their web application.  If they did, they are probably a programmer and would do the work themselves.&lt;/p&gt;

&lt;p&gt;Being a rockstar or guru developer alone is not enough be effective.  I have talked enough about the challenges.  Next, let’s talk about how to find and work with effective consultants.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;effective-consultants&quot;&gt;Effective Consultants&lt;/h3&gt;

&lt;p&gt;Being technically proficient should be the &lt;em&gt;starting point&lt;/em&gt; for consultants.  But it is just as important to become a trusted advisor and direct projects along paths that will lead to less heartache down the road.&lt;/p&gt;

&lt;p&gt;It is vital to get consultants involved early in the process.  I understand there is an impulse to save billable hours by handling the planning without a consultant’s help.  However, mis-steps at this stage can result in many hours of back tracking that might have been avoided.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;There are no solutions, only trade offs. - &lt;cite&gt;Thomas Sowell&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I know that sounds daunting, but it is very true, and I think it embodies the kind of advice you should be getting from your consultant.&lt;/p&gt;

&lt;h4 id=&quot;here-is-an-example&quot;&gt;Here is an example:&lt;/h4&gt;

&lt;p&gt;Client will ask what seems like a very simple, straight-forward question, like this: &lt;em&gt;How much work would it take to make an autocomplete search bar on this page ?&lt;/em&gt;  My answer starts a conversation that is probably more involved that my client thought.  We have to talk about the pros and cons of each possible solution.  We need to consider the end goal of the application.  Is this a proof of concept application ?  Is it something that needs to be ready for real-world consumer use when we are done ?  How important is this feature compared to other features we want and how does that fit in with the budget ?  Although this conversation might not have been the answer my client expected, I believe I am doing my job when we have these conversations.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Cry in the dojo, laugh on the battlefield.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Putting in the extra time by discussing the pros and cons of each decision can save hours and heartache later.  I am very skeptical of consultants who are very &lt;em&gt;tribal&lt;/em&gt; about their technologies.  If consultant answers the question above (the autocomplete search example) with something like this: &lt;em&gt;We should just use X because it is the best&lt;/em&gt;, please be wary.&lt;/p&gt;

&lt;p&gt;Also beware the consultant who wants to build technology for technology’s sake.  They might want to try out this new framework because it is cool.  Or over-engineer some solution based on an ego trip or some misconception about what a client needs to meet their goals.  I think these scenarios are not very common for consultants who have been around the block more than once, but it is worth mentioning.&lt;/p&gt;

&lt;h3 id=&quot;finding-your-effective-consultants&quot;&gt;Finding Your Effective Consultants&lt;/h3&gt;

&lt;p&gt;Now that you know what to look for, how do you find these magical consultants ?  I wish there were a tried and true method, but there is not.  Even if you know from experience (perhaps a personal recommendation from a trusted friend) that a consultant is effective, we are all people with varying personalities and sometimes we clash.&lt;/p&gt;

&lt;p&gt;Because of this uncertainty I am a big proponent of the &lt;strong&gt;Test Drive&lt;/strong&gt;.  Every large project can hopefully be broken up into smaller chunks.  By “small chunk” I mean something that can be accomplished in few days of work or less.  Once you have focused in on a potential consultant, see if you can find one of these smaller chunks and hire the consultant to complete the work.  If the consultant is good and you have chosen something that is &lt;em&gt;not&lt;/em&gt; a small chunk, they should be able to tell you that right away.  Once the work is done, you should know if you like working with the consultant and vice-versa.  If not, you should still have a chunk of completed work and you’ve only spent small amount of money.&lt;/p&gt;

&lt;p&gt;I hope my opinions and thoughts about finding consultants has been helpful.  If you have questions or want to chat, you can always reach me &lt;a href=&quot;/#section5&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 03 Jun 2015 00:00:00 -0700</pubDate>
        <link>http://localhost:4000/blog/finding-effective-consultants.html</link>
        <guid isPermaLink="true">http://localhost:4000/blog/finding-effective-consultants.html</guid>
        
        <category>consulting</category>
        
        
      </item>
    
  </channel>
</rss>
